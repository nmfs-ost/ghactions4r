% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_r_workflows.R
\name{use_create_cov_badge}
\alias{use_create_cov_badge}
\title{workflow for adding a code coverage badge}
\usage{
use_create_cov_badge(
  workflow_name = "call-create-cov-badge.yml",
  build_trigger = "push_to_main",
  use_public_rspm = TRUE,
  depends_on_quarto = FALSE,
  tag_ghactions4r = NULL
)
}
\arguments{
\item{workflow_name}{What to name the github action workflow locally. Must
have the file extension \code{.yml}}

\item{build_trigger}{Select the
\href{https://docs.github.com/en/actions/get-started/understand-github-actions#events}{event that triggers the workflow}. Options are:
\describe{
\item{\code{push_to_main}}{Run on pushing commits to main (default)}
\item{\code{weekly}}{Run on the default branch (usually main) once a week}
\item{\code{manually}}{run manually with the workflow_dispatch trigger}
}
Multiple build triggers are allowed; specify them as a vector. Note that
invalid build triggers will be silently removed as long as one build trigger
is specified correctly.}

\item{use_public_rspm}{Use posit package manager instead of CRAN to install dependencies? The
advantage here is that dependencies are precompiled, so install should be much quicker. In
rare situations (like packages with TMB dependencies), using use_public_rspm = FALSE may be
a better option. Note a setting only needs to be specified in the yml if use_public_rspm is FALSE, so
there will be no setting added if use_public_rspm is TRUE.}

\item{depends_on_quarto}{Adds an option that installs quarto as a dependency.}

\item{tag_ghactions4r}{Tag of ghactions4r workflow to pin to for the
reusable workflow. This ensures compatibility with a specific version of
ghactions4r functions. The tradeoff is that fixes will not happen
automatically; instead, the user will have to update the pinned version of
the caller workflow used. See the options by looking at the
\href{https://github.com/nmfs-ost/ghactions4r/tags}{ghactions4r tags}. Another
option is to pin to commit hashes, but the user will need to do this by
manually editing the caller workflow after creation. See
\href{https://docs.github.com/en/actions/reference/security/secure-use}{github documentation on security}
to understand how this is more secure. Again, the tradeoff is that the
workflow will not be automatically updated.}
}
\description{
This workflow will create a new code coverage badge with the latest overall
coverage value from the main branch on every push to main. The coverage badges are pushed
to a branch called badges within the repository, which can be referenced in
the readme file on main to display the current code coverage.
}
